name: opencosmo CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: check pyproject.toml
        run: cat pyproject.toml

      - name: Install dependencies
        run: poetry install --with develop

      - name: Run ruff linter
        run: poetry run ruff check .

      - name: Run mypy type checker
        run: poetry run mypy opencosmo

  build-docs:
    needs: lint-typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs"

  download-test-data:
    needs: lint-typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Download test data
        uses: tespkg/actions-cache@v1
        with:
          accessKey: ${{ secrets.TEST_DATA_ACCESS_KEY }}
          secretKey: ${{ secrets.TEST_DATA_SECRET_KEY }}
          bucket: ${{ secrets.TEST_DATA_BUCKET }}
          key: test-data
          path: test/resource

  run-tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    needs: download-test-data
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13']
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --with test

      - name: get test data
        uses: actions/cache@v3
        with:
          path: test/resource
          key: test-data

      - name: Run tests with pytest
        run: |
          poetry run pytest
        env:
          OPENCOSMO_DATA_PATH: ${{ github.workspace }}/test/resource

  build:
    name: build
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Build package
        run: poetry build
